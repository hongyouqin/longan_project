// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dc_rpc.proto
#ifndef GRPC_dc_5frpc_2eproto__INCLUDED
#define GRPC_dc_5frpc_2eproto__INCLUDED

#include "dc_rpc.pb.h"

#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace proto {

class LonganDataCenter final {
 public:
  static constexpr char const* service_full_name() {
    return "proto.LonganDataCenter";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 存储员工人脸信息
    virtual ::grpc::Status StorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::proto::StorageReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>> AsyncStorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>>(AsyncStorageEmployeeFaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>> PrepareAsyncStorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>>(PrepareAsyncStorageEmployeeFaceRaw(context, request, cq));
    }
    // 存储陌生人脸信息
    virtual ::grpc::Status StorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::proto::StorageReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>> AsyncStorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>>(AsyncStorageStrangerFaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>> PrepareAsyncStorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>>(PrepareAsyncStorageStrangerFaceRaw(context, request, cq));
    }
    // 拉取人脸注册表的所有数据
    virtual ::grpc::Status ExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::proto::StorageReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>> AsyncExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>>(AsyncExtractFaceRegTableDatasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>> PrepareAsyncExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>>(PrepareAsyncExtractFaceRegTableDatasRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>* AsyncStorageEmployeeFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>* PrepareAsyncStorageEmployeeFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>* AsyncStorageStrangerFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>* PrepareAsyncStorageStrangerFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>* AsyncExtractFaceRegTableDatasRaw(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::proto::StorageReply>* PrepareAsyncExtractFaceRegTableDatasRaw(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status StorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::proto::StorageReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>> AsyncStorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>>(AsyncStorageEmployeeFaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>> PrepareAsyncStorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>>(PrepareAsyncStorageEmployeeFaceRaw(context, request, cq));
    }
    ::grpc::Status StorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::proto::StorageReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>> AsyncStorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>>(AsyncStorageStrangerFaceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>> PrepareAsyncStorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>>(PrepareAsyncStorageStrangerFaceRaw(context, request, cq));
    }
    ::grpc::Status ExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::proto::StorageReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>> AsyncExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>>(AsyncExtractFaceRegTableDatasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>> PrepareAsyncExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>>(PrepareAsyncExtractFaceRegTableDatasRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* AsyncStorageEmployeeFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* PrepareAsyncStorageEmployeeFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* AsyncStorageStrangerFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* PrepareAsyncStorageStrangerFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* AsyncExtractFaceRegTableDatasRaw(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* PrepareAsyncExtractFaceRegTableDatasRaw(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_StorageEmployeeFace_;
    const ::grpc::internal::RpcMethod rpcmethod_StorageStrangerFace_;
    const ::grpc::internal::RpcMethod rpcmethod_ExtractFaceRegTableDatas_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 存储员工人脸信息
    virtual ::grpc::Status StorageEmployeeFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response);
    // 存储陌生人脸信息
    virtual ::grpc::Status StorageStrangerFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response);
    // 拉取人脸注册表的所有数据
    virtual ::grpc::Status ExtractFaceRegTableDatas(::grpc::ServerContext* context, const ::proto::ExtractFaceParam* request, ::proto::StorageReply* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_StorageEmployeeFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StorageEmployeeFace() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_StorageEmployeeFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StorageEmployeeFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStorageEmployeeFace(::grpc::ServerContext* context, ::proto::UserParam* request, ::grpc::ServerAsyncResponseWriter< ::proto::StorageReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StorageStrangerFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_StorageStrangerFace() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_StorageStrangerFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StorageStrangerFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStorageStrangerFace(::grpc::ServerContext* context, ::proto::UserParam* request, ::grpc::ServerAsyncResponseWriter< ::proto::StorageReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExtractFaceRegTableDatas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ExtractFaceRegTableDatas() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ExtractFaceRegTableDatas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExtractFaceRegTableDatas(::grpc::ServerContext* context, const ::proto::ExtractFaceParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExtractFaceRegTableDatas(::grpc::ServerContext* context, ::proto::ExtractFaceParam* request, ::grpc::ServerAsyncResponseWriter< ::proto::StorageReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_StorageEmployeeFace<WithAsyncMethod_StorageStrangerFace<WithAsyncMethod_ExtractFaceRegTableDatas<Service > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_StorageEmployeeFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StorageEmployeeFace() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_StorageEmployeeFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StorageEmployeeFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StorageStrangerFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_StorageStrangerFace() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_StorageStrangerFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StorageStrangerFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExtractFaceRegTableDatas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ExtractFaceRegTableDatas() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ExtractFaceRegTableDatas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExtractFaceRegTableDatas(::grpc::ServerContext* context, const ::proto::ExtractFaceParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_StorageEmployeeFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_StorageEmployeeFace() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_StorageEmployeeFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StorageEmployeeFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStorageEmployeeFace(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StorageStrangerFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_StorageStrangerFace() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_StorageStrangerFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StorageStrangerFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStorageStrangerFace(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExtractFaceRegTableDatas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_ExtractFaceRegTableDatas() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ExtractFaceRegTableDatas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExtractFaceRegTableDatas(::grpc::ServerContext* context, const ::proto::ExtractFaceParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExtractFaceRegTableDatas(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StorageEmployeeFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StorageEmployeeFace() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::UserParam, ::proto::StorageReply>(std::bind(&WithStreamedUnaryMethod_StorageEmployeeFace<BaseClass>::StreamedStorageEmployeeFace, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StorageEmployeeFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StorageEmployeeFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStorageEmployeeFace(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UserParam,::proto::StorageReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StorageStrangerFace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_StorageStrangerFace() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::UserParam, ::proto::StorageReply>(std::bind(&WithStreamedUnaryMethod_StorageStrangerFace<BaseClass>::StreamedStorageStrangerFace, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_StorageStrangerFace() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StorageStrangerFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStorageStrangerFace(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::UserParam,::proto::StorageReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExtractFaceRegTableDatas : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ExtractFaceRegTableDatas() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::proto::ExtractFaceParam, ::proto::StorageReply>(std::bind(&WithStreamedUnaryMethod_ExtractFaceRegTableDatas<BaseClass>::StreamedExtractFaceRegTableDatas, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ExtractFaceRegTableDatas() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExtractFaceRegTableDatas(::grpc::ServerContext* context, const ::proto::ExtractFaceParam* request, ::proto::StorageReply* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExtractFaceRegTableDatas(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::proto::ExtractFaceParam,::proto::StorageReply>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_StorageEmployeeFace<WithStreamedUnaryMethod_StorageStrangerFace<WithStreamedUnaryMethod_ExtractFaceRegTableDatas<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_StorageEmployeeFace<WithStreamedUnaryMethod_StorageStrangerFace<WithStreamedUnaryMethod_ExtractFaceRegTableDatas<Service > > > StreamedService;
};

}  // namespace proto


#endif  // GRPC_dc_5frpc_2eproto__INCLUDED
