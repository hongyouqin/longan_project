// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dc_rpc.proto

#include "dc_rpc.pb.h"
#include "dc_rpc.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace proto {

static const char* LonganDataCenter_method_names[] = {
  "/proto.LonganDataCenter/StorageEmployeeFace",
  "/proto.LonganDataCenter/StorageStrangerFace",
  "/proto.LonganDataCenter/ExtractFaceRegTableDatas",
};

std::unique_ptr< LonganDataCenter::Stub> LonganDataCenter::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< LonganDataCenter::Stub> stub(new LonganDataCenter::Stub(channel));
  return stub;
}

LonganDataCenter::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_StorageEmployeeFace_(LonganDataCenter_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StorageStrangerFace_(LonganDataCenter_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ExtractFaceRegTableDatas_(LonganDataCenter_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status LonganDataCenter::Stub::StorageEmployeeFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::proto::StorageReply* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_StorageEmployeeFace_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* LonganDataCenter::Stub::AsyncStorageEmployeeFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::proto::StorageReply>::Create(channel_.get(), cq, rpcmethod_StorageEmployeeFace_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* LonganDataCenter::Stub::PrepareAsyncStorageEmployeeFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::proto::StorageReply>::Create(channel_.get(), cq, rpcmethod_StorageEmployeeFace_, context, request, false);
}

::grpc::Status LonganDataCenter::Stub::StorageStrangerFace(::grpc::ClientContext* context, const ::proto::UserParam& request, ::proto::StorageReply* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_StorageStrangerFace_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* LonganDataCenter::Stub::AsyncStorageStrangerFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::proto::StorageReply>::Create(channel_.get(), cq, rpcmethod_StorageStrangerFace_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* LonganDataCenter::Stub::PrepareAsyncStorageStrangerFaceRaw(::grpc::ClientContext* context, const ::proto::UserParam& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::proto::StorageReply>::Create(channel_.get(), cq, rpcmethod_StorageStrangerFace_, context, request, false);
}

::grpc::Status LonganDataCenter::Stub::ExtractFaceRegTableDatas(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::proto::StorageReply* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ExtractFaceRegTableDatas_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* LonganDataCenter::Stub::AsyncExtractFaceRegTableDatasRaw(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::proto::StorageReply>::Create(channel_.get(), cq, rpcmethod_ExtractFaceRegTableDatas_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::proto::StorageReply>* LonganDataCenter::Stub::PrepareAsyncExtractFaceRegTableDatasRaw(::grpc::ClientContext* context, const ::proto::ExtractFaceParam& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderFactory< ::proto::StorageReply>::Create(channel_.get(), cq, rpcmethod_ExtractFaceRegTableDatas_, context, request, false);
}

LonganDataCenter::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      LonganDataCenter_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< LonganDataCenter::Service, ::proto::UserParam, ::proto::StorageReply>(
          std::mem_fn(&LonganDataCenter::Service::StorageEmployeeFace), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      LonganDataCenter_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< LonganDataCenter::Service, ::proto::UserParam, ::proto::StorageReply>(
          std::mem_fn(&LonganDataCenter::Service::StorageStrangerFace), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      LonganDataCenter_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< LonganDataCenter::Service, ::proto::ExtractFaceParam, ::proto::StorageReply>(
          std::mem_fn(&LonganDataCenter::Service::ExtractFaceRegTableDatas), this)));
}

LonganDataCenter::Service::~Service() {
}

::grpc::Status LonganDataCenter::Service::StorageEmployeeFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status LonganDataCenter::Service::StorageStrangerFace(::grpc::ServerContext* context, const ::proto::UserParam* request, ::proto::StorageReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status LonganDataCenter::Service::ExtractFaceRegTableDatas(::grpc::ServerContext* context, const ::proto::ExtractFaceParam* request, ::proto::StorageReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace proto

